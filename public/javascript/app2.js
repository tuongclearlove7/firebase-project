export const static_App = (

    function(){

        const data = [

            {
                item :  `<a href="javascript:void(0);" class="timer" ></a>
                <a href="javascript:void(0);" class="item1" >Page 1</a>
                <a href="javascript:void(0);" class="item2" >Page 2</a>
                <a href="javascript:void(0);" class="item3" >Page 3</a>
                <a href="javascript:void(0);" class="item4" >Page 4</a>
                <a href="javascript:void(0);" class="item5" >Page 5</a>`,

                block : `
                        <div class="card_create">
                        <div class="iconGithub"><a class="fa fa-github" href="https://github.com/tuongclearlove7"></a></div>
                        <div class="iconFacebook"><a class="fa fa-facebook" href="https://www.facebook.com/Ytttuong1"></a></div>
                        <div class="iconInstagram"><a class="fa fa-instagram" href="https://www.instagram.com/warkeryt/?next=%2F"></a></div>
                        <div><label class="label1">Name</label>
                        <input class="input1" type="text" name="name" placeholder="Nh·∫≠p t√™n ki·∫øn th·ª©c">
                        </div>
                        <div><label class="label2">Description</label>
                        <input class="input2" type="text" name="description" placeholder="Nh·∫≠p m√¥ t·∫£">
                        </div>
                        <div>
                        <button id="newCreate">Create</button>
                        </div>
                        <div>
                        <a class="welcomeToWeb" href="javascript:void(0);" >console.log("hello world");</a>
                        </div>
                        <!-- <div><img class="apiImage"  src="./image/api.png" alt=""></div> -->
                        </div>
                        </div>`,
                itemModel : "",
                top : ` <a href="javascript:void(0);" class="back_to_top" id = "top">
                                        <i class="fa fa-caret-down"></i></a>`,
                pagE1 : `
                        <div class="card_create">
                        <div class="iconGithub"><a class="fa fa-github" href="https://github.com/tuongclearlove7"></a></div>
                        <div class="iconFacebook"><a class="fa fa-facebook" href="https://www.facebook.com/Ytttuong1"></a></div>
                        <div class="iconInstagram"><a class="fa fa-instagram" href="https://www.instagram.com/warkeryt/?next=%2F"></a></div>
                        <div><label class="label1">Name</label>
                        <input class="input1" type="text" name="name" placeholder="Nh·∫≠p t√™n ki·∫øn th·ª©c">
                        </div>
                        <div><label class="label2">Description</label>
                        <input class="input2" type="text" name="description" placeholder="Nh·∫≠p m√¥ t·∫£">
                        </div>
                        <div>
                        <button id="newCreate">Create</button>
                        </div>
                        <div>
                        <a class="welcomeToWeb" href="javascript:void(0);" >console.log("hello world");</a>
                        </div>
                        <!-- <div><img class="apiImage"  src="./image/api.png" alt=""></div> -->
                        </div>
                        </div>`,
                pagE2 : `
                        <div class="page2">
                        <p>
                        DNS documentation
                        Introduce HTTP
                        üí¨ What is DNS? (DNS l√† g√¨?)

                        The (Domain Name System) => (DNS) is the phonebook of the Internet. Humans access information online through domain names, like nytimes.com or espn.com. Web browsers interact through Internet Protocol (IP) addresses. DNS translates domain names to IP addresses so browsers can load Internet resources.
                        Each device connected to the Internet has a unique IP address which other machines use to find the device. DNS servers eliminate the need for humans to memorize IP addresses such as 192.168.1.1 (in IPv4), or more complex newer alphanumeric IP addresses such as 2400:cb00:2048:1::c629:d7a2 (in IPv6).
                        Vietsub( (H·ªá th·ªëng t√™n mi·ªÅn) => (DNS) l√† danh b·∫° c·ªßa Internet. Con ng∆∞·ªùi truy c·∫≠p th√¥ng tin tr·ª±c tuy·∫øn th√¥ng qua c√°c t√™n mi·ªÅn, nh∆∞ nytimes.com ho·∫∑c espn.com. C√°c tr√¨nh duy·ªát web t∆∞∆°ng t√°c th√¥ng qua c√°c ƒë·ªãa ch·ªâ Giao th·ª©c Internet (IP). DNS d·ªãch t√™n mi·ªÅn th√†nh ƒë·ªãa ch·ªâ IP ƒë·ªÉ tr√¨nh duy·ªát c√≥ th·ªÉ t·∫£i t√†i nguy√™n Internet.
                        M·ªói thi·∫øt b·ªã ƒë∆∞·ª£c k·∫øt n·ªëi v·ªõi Internet c√≥ m·ªôt ƒë·ªãa ch·ªâ IP duy nh·∫•t m√† c√°c m√°y kh√°c s·ª≠ d·ª•ng ƒë·ªÉ t√¨m thi·∫øt b·ªã. C√°c m√°y ch·ªß DNS lo·∫°i b·ªè nhu c·∫ßu con ng∆∞·ªùi ph·∫£i ghi nh·ªõ c√°c ƒë·ªãa ch·ªâ IP nh∆∞ 192.168.1.1 (trong IPv4) ho·∫∑c c√°c ƒë·ªãa ch·ªâ IP ch·ªØ v√† s·ªë ph·ª©c t·∫°p h∆°n m·ªõi h∆°n nh∆∞ 2400:cb00:2048:1::c629:d7a2 (trong IPv6).)
                        üí¨ How does DNS work? (DNS ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o?)

                        The process of DNS resolution involves converting a hostname (such as www.example.com) into a computer-friendly IP address (such as 192.168.1.1). An IP address is given to each device on the Internet, and that address is necessary to find the appropriate Internet device - like a street address is used to find a particular home. When a user wants to load a webpage, a translation must occur between what a user types into their web browser (example.com) and the machine-friendly address necessary to locate the example.com webpage.

                        In order to understand the process behind the DNS resolution, it‚Äôs important to learn about the different hardware components a DNS query must pass between. For the web browser, the DNS lookup occurs "behind the scenes" and requires no interaction from the user‚Äôs computer apart from the initial request.

                        Vietsub (Qu√° tr√¨nh ph√¢n gi·∫£i DNS li√™n quan ƒë·∫øn vi·ªác chuy·ªÉn ƒë·ªïi t√™n m√°y ch·ªß (ch·∫≥ng h·∫°n nh∆∞ www.example.com) th√†nh ƒë·ªãa ch·ªâ IP th√¢n thi·ªán v·ªõi m√°y t√≠nh (ch·∫≥ng h·∫°n nh∆∞ 192.168.1.1). M·ªôt ƒë·ªãa ch·ªâ IP ƒë∆∞·ª£c cung c·∫•p cho m·ªói thi·∫øt b·ªã tr√™n Internet v√† ƒë·ªãa ch·ªâ ƒë√≥ l√† c·∫ßn thi·∫øt ƒë·ªÉ t√¨m thi·∫øt b·ªã Internet th√≠ch h·ª£p - gi·ªëng nh∆∞ ƒë·ªãa ch·ªâ ƒë∆∞·ªùng ph·ªë ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ t√¨m m·ªôt ng√¥i nh√† c·ª• th·ªÉ. Khi ng∆∞·ªùi d√πng mu·ªën t·∫£i trang web, b·∫£n d·ªãch ph·∫£i di·ªÖn ra gi·ªØa n·ªôi dung ng∆∞·ªùi d√πng nh·∫≠p v√†o tr√¨nh duy·ªát web c·ªßa h·ªç (example.com) v√† ƒë·ªãa ch·ªâ th√¢n thi·ªán v·ªõi m√°y c·∫ßn thi·∫øt ƒë·ªÉ ƒë·ªãnh v·ªã trang web example.com.

                        ƒê·ªÉ hi·ªÉu quy tr√¨nh ƒë·∫±ng sau ƒë·ªô ph√¢n gi·∫£i DNS, ƒëi·ªÅu quan tr·ªçng l√† ph·∫£i t√¨m hi·ªÉu v·ªÅ c√°c th√†nh ph·∫ßn ph·∫ßn c·ª©ng kh√°c nhau m√† truy v·∫•n DNS ph·∫£i chuy·ªÉn qua. ƒê·ªëi v·ªõi tr√¨nh duy·ªát web, qu√° tr√¨nh tra c·ª©u DNS di·ªÖn ra "·ªü h·∫≠u tr∆∞·ªùng" v√† kh√¥ng y√™u c·∫ßu t∆∞∆°ng t√°c t·ª´ m√°y t√≠nh c·ªßa ng∆∞·ªùi d√πng ngo√†i y√™u c·∫ßu ban ƒë·∫ßu.)

                        Detail Infomation
                        - link : https://www.cloudflare.com/en-gb/learning/dns/what-is-dns/
                        - link : https://howdns.works/
                        - link : https://developer.mozilla.org/en-US/docs/Glossary/DNS
                        - link : https://www.youtube.com/watch?v=Wj0od2ag5sk
                        - link : https://www.youtube.com/watch?v=7lxgpKh_fRY
                        - link : https://www.youtube.com/watch?v=zEmUuNFBgN8&list=PLTk5ZYSbd9MhMmOiPhfRJNW7bhxHo4q-K
                    </p>
                    </div>`,
                pagE3 : `<div class="page3"><p align='left'><a href='https://github.com/tuongclearlove7'><img height='180em' src='https://github-readme-stats-eight-theta.vercel.app/api?username=tuongclearlove7&show_icons=true&theme=algolia&include_all_commits=true&count_private=true'/><img height='180em' src='https://github-readme-stats-eight-theta.vercel.app/api/top-langs/?username=tuongclearlove7&layout=compact&langs_count=8&theme=algolia'/></a></p></div>`,
                pagE4 : `<div class="page4"><h1>Page4</h1></div>`,
                pagE5 : `<div class="page5"><h1>Page5</h1></div>`,

                inputBlock : document.querySelector("#layout_after_id"),

                getIDFooter : document.querySelector("#footer"),

                visits : 0,

                audio : new Audio("../image/anhkhongthathu.mp3"),

                author : 'clearlove7',

                list_knowledges : 'http://localhost:3000/newfeed',

                list_abouts : "http://localhost:3000/about",

                list_applications : "http://localhost:3000/application",
                
                list_courses : "http://localhost:3000/courses",

                myabout : callbacks => {
                    
                    fetch(data[0].list_abouts)
    
                    .then(function (response) {
                
                        return response.json();

                    }).then(callbacks)
                },

                app : callbacks => {
                    
                    fetch(data[0].list_applications)
    
                    .then(function (response) {
                
                        return response.json();

                    }).then(callbacks)
                },
            }
        ];


            return {

                set(...value){

                    for (var i = 0; i < value.length; i++){

                        data.push(value[i]);
                    }
                },

                get(index){

                    for (var i = 0; i < data.length; i++){

                        if(index === i){

                            break;

                            return data[i];
                        }
                    }

                    return data[index];
                },

                gets_Tostring(){

                    var toString = "";

                    for (var i = 0; i < data.length; i++){

                        toString = toString + data[i];
                    }

                    return toString;
                },

                delete_toIndex(index){

                    delete data[index];

                },

                gets(){

                    for (var i = 0; i < data.length; i++){

                            console.log(data[i]);
                    }
                },

                get_index(value) {

                    return data.indexOf(value);
                }
            }
        }
)();





export function start_app(run){

    switch(run){

        case true:

                while(run){

                    var obj = Object.values(static_App.get(0))

                    static_App.get(0).myabout(about => console.log(about));

                    var model = document.querySelector("#layout_after_id");

                        static_App.get(0).app(function(calls){

                        console.log(calls);
                        
                        model.innerHTML = `<div class="render-mydata">
                                        <h1 style="text-align:left;">GitHub Analytics</h1>
                                        ${calls[0].analytics}
                                        </div>`
                        
                    });

            break;
        };

        break;

        case false :

            console.log("Application is shutting down");

        break;

        default:

            console.log(true + " or " + false);

        break;
    }
}






